<style>
.leaflet-interactive-disable {
    cursor: grab !important;
}

.leaflet-hyphens {
    hyphens: auto;
    -ms-hyphens: auto;
    -webkit-hyphens: auto;
    -moz-hyphens: auto;
}

</style>

<script>
    function showMarker(m) {
        if(m.target.uuid){
            jQuery.get('$restUrlBBOX'+'?uuid='+m.target.uuid).done(function(data) {
                var d = JSON.parse(data);
                // create an orange rectangle
                m.target.bbox=L.rectangle(d, {color: "blue", weight: 3, fill: false});
                if(map){
                    map.addLayer(m.target.bbox);
                }
            });
        }
    }
    
    function hideMarker(m) {
        if(m.target.bbox){
            if(map){
                map.removeLayer(m.target.bbox);
            }
        }
    }

    var mapSizeX;
    var popupMarkerSize;
    var popupMarkerOptions = {};
    
    if(map){
        if(map._size){
            mapSizeX = map._size.x;
        }
    }
    
    if(mapSizeX){
        if(mapSizeX < 310){
            popupMarkerOptions = {
                maxWidth: 180
            };
        }
    }

    // "Zulassungsverfahren" markers
    var mapMarkers10 = L.markerClusterGroup({
        id: 'mapMarkers10',
        iconCreateFunction: function (cluster) {
            var childCount = cluster.getChildCount();
            var c = ' marker-cluster-';
            if (childCount < 10) {
                c += 'small';
            } else if (childCount < 100) {
                c += 'medium';
            } else {
                c += 'large';
            }
            if(smallIcons){
             c += ' light';
            }
            return new L.DivIcon({ html: '<div><span>' + childCount + '</span></div>', className: 'marker-cluster marker-cluster-10' + c, iconSize: new L.Point(40, 40) });
        }
    });
    // "Ausländische Verfahren" markers
    var mapMarkers11 = L.markerClusterGroup({
        id: 'mapMarkers11',
        iconCreateFunction: function (cluster) {
            var childCount = cluster.getChildCount();
            var c = ' marker-cluster-';
            if (childCount < 10) {
                c += 'small';
            } else if (childCount < 100) {
                c += 'medium';
            } else {
                c += 'large';
            }
            if(smallIcons){
             c += ' light';
            }
            return new L.DivIcon({ html: '<div><span>' + childCount + '</span></div>', className: 'marker-cluster marker-cluster-11' + c, iconSize: new L.Point(40, 40) });
        }
    });
    // "Vorgelagerte Verfahren" markers
    var mapMarkers1314 = L.markerClusterGroup({
        id: 'mapMarkers1314',
        iconCreateFunction: function (cluster) {
            var childCount = cluster.getChildCount();
            var c = ' marker-cluster-';
            if (childCount < 10) {
                c += 'small';
            } else if (childCount < 100) {
                c += 'medium';
            } else {
                c += 'large';
            }
            if(smallIcons){
             c += ' light';
            }
            return new L.DivIcon({ html: '<div><span>' + childCount + '</span></div>', className: 'marker-cluster marker-cluster-1314' + c, iconSize: new L.Point(40, 40) });
        }
    });
    // "Negative Vorprüfungen" markers
    var mapMarkers12 = L.markerClusterGroup({
        id: 'mapMarkers12',
        iconCreateFunction: function (cluster) {
            var childCount = cluster.getChildCount();
            var c = ' marker-cluster-';
            if (childCount < 10) {
                c += 'small';
            } else if (childCount < 100) {
                c += 'medium';
            } else {
                c += 'large';
            }
            if(smallIcons){
             c += ' light';
            }
            return new L.DivIcon({ html: '<div><span>' + childCount + '</span></div>', className: 'marker-cluster marker-cluster-12' + c, iconSize: new L.Point(40, 40) });
        }
    });
    // "Bebauungsplänen" markers
    var mapMarkersDevPlan = L.markerClusterGroup({
        id: 'mapMarkersDevPlan',
        iconCreateFunction: function (cluster) {
            var childCount = cluster.getChildCount();
            var c = ' marker-cluster-';
            if (childCount < 10) {
                c += 'small';
            } else if (childCount < 100) {
                c += 'medium';
            } else {
                c += 'large';
            }
            if(smallIcons){
             c += ' light';
            }
            return new L.DivIcon({ html: '<div><span>' + childCount + '</span></div>', className: 'marker-cluster marker-cluster-dev-plan' + c, iconSize: new L.Point(40, 40) });
        }
    });
    
    jQuery.get("$restUrlLegendCounter")
    .done(function(data, textStatus, jqxhr) {
        var mapFilter = $('.map-filter ul li div');
        var overlayers = {};
        if(mapFilter) {
            if(legendCounter){
                if(legendCounter.countMarker1){
                    mapFilter.append( '<div class="form-element boxed map blue"><div class="input-check"><div class="control-group"><label class="control control--checkbox" for="mapMarkers10"><input id="mapMarkers10" name="mapMarkers10" type="checkbox"><div class="control__indicator"></div>Zulassungsverfahren</label></div></div></div>');
                    $('#mapMarkers10').on('change', function() {
                        var checkbox = $(this);
                        if ($(this).is(':checked')) {
                            map.addLayer(mapMarkers10);
                        } else {
                            map.removeLayer(mapMarkers10);
                        }
                    });
                }
                if(legendCounter.countMarker3){
                    mapFilter.append( '<div class="form-element boxed map"><div class="input-check"><div class="control-group"><label class="control control--checkbox" for="mapMarkers11"><input id="mapMarkers11" name="mapMarkers11" type="checkbox"><div class="control__indicator"></div>Ausl&#228;ndische Vorhaben</label></div></div></div>');
                    $('#mapMarkers11').on('change', function() {
                        var checkbox = $(this);
                        if ($(this).is(':checked')) {
                            map.addLayer(mapMarkers11);
                        } else {
                            map.removeLayer(mapMarkers11);
                        }
                    });
                }
                if(legendCounter.countMarker2){
                    mapFilter.append( '<div class="form-element boxed map red"><div class="input-check"><div class="control-group"><label class="control control--checkbox" for="mapMarkers1314"><input id="mapMarkers1314" name="mapMarkers1314" type="checkbox"><div class="control__indicator"></div>Vorgelagerte Verfahren</label></div></div></div>');
                    $('#mapMarkers1314').on('change', function() {
                        var checkbox = $(this);
                        if ($(this).is(':checked')) {
                            map.addLayer(mapMarkers1314);
                        } else {
                            map.removeLayer(mapMarkers1314);
                        }
                    });
                }
                if(legendCounter.countMarker4){
                    mapFilter.append( '<div class="form-element boxed map orange"><div class="input-check"><div class="control-group"><label class="control control--checkbox" for="mapMarkers12"><input id="mapMarkers12" name="mapMarkers12" type="checkbox"><div class="control__indicator"></div>Negative Vorpr&#252;fungen</label></div></div></div>');
                    $('#mapMarkers12').on('change', function() {
                        var checkbox = $(this);
                        if ($(this).is(':checked')) {
                            map.addLayer(mapMarkers12);
                        } else {
                            map.removeLayer(mapMarkers12);
                        }
                    });
                }
                if(legendCounter.countMarkerDevPlan){
                   mapFilter.append( '<div class="form-element boxed map green"><div class="input-check"><div class="control-group"><label class="control control--checkbox" for="mapMarkersDevPlan"><input id="mapMarkersDevPlan" name="mapMarkersDevPlan" type="checkbox"><div class="control__indicator"></div>Bauleitplanung</label></div></div></div>');
                   $('#mapMarkersDevPlan').on('change', function() {
                        var checkbox = $(this);
                        if ($(this).is(':checked')) {
                            map.addLayer(mapMarkersDevPlan);
                        } else {
                            map.removeLayer(mapMarkersDevPlan);
                        }
                    });
                }
            }
        }
        var mapFilterXs = $('.map-filter-xs');
        if(mapFilterXs) {
            if(legendCounter){
                if(legendCounter.countMarker1){
                    mapFilterXs.append( '<div class="form-element boxed map blue" style="padding:0px"><div class="input-check"><div class="control-group"><label class="control control--checkbox" for="mapMarkers10"><input id="mapMarkers10" name="mapMarkers10" type="checkbox"><div class="control__indicator"></div>Zulassungsverfahren</label></div></div></div>');
                    $('#mapMarkers10').on('change', function() {
                        var checkbox = $(this);
                        if ($(this).is(':checked')) {
                            map.addLayer(mapMarkers10);
                        } else {
                            map.removeLayer(mapMarkers10);
                        }
                    });
                }
                if(legendCounter.countMarker3){
                    mapFilterXs.append( '<div class="form-element boxed map" style="padding:0px"><div class="input-check"><div class="control-group"><label class="control control--checkbox" for="mapMarkers11"><input id="mapMarkers11" name="mapMarkers11" type="checkbox"><div class="control__indicator"></div>Ausl&#228;ndische Vorhaben</label></div></div></div>');
                    $('#mapMarkers11').on('change', function() {
                        var checkbox = $(this);
                        if ($(this).is(':checked')) {
                            map.addLayer(mapMarkers11);
                        } else {
                            map.removeLayer(mapMarkers11);
                        }
                    });
                }
                if(legendCounter.countMarker2){
                    mapFilterXs.append( '<div class="form-element boxed map red" style="padding:0px"><div class="input-check"><div class="control-group"><label class="control control--checkbox" for="mapMarkers1314"><input id="mapMarkers1314" name="mapMarkers1314" type="checkbox"><div class="control__indicator"></div>Vorgelagerte Verfahren</label></div></div></div>');
                    $('#mapMarkers1314').on('change', function() {
                        var checkbox = $(this);
                        if ($(this).is(':checked')) {
                            map.addLayer(mapMarkers1314);
                        } else {
                            map.removeLayer(mapMarkers1314);
                        }
                    });
                }
                if(legendCounter.countMarker4){
                    mapFilterXs.append( '<div class="form-element boxed map orange" style="padding:0px"><div class="input-check"><div class="control-group"><label class="control control--checkbox" for="mapMarkers12"><input id="mapMarkers12" name="mapMarkers12" type="checkbox"><div class="control__indicator"></div>Negative Vorpr&#252;fungen</label></div></div></div>');
                    $('#mapMarkers12').on('change', function() {
                        var checkbox = $(this);
                        if ($(this).is(':checked')) {
                            map.addLayer(mapMarkers12);
                        } else {
                            map.removeLayer(mapMarkers12);
                        }
                    });
                }
                if(legendCounter.countMarkerDevPlan){
                   mapFilterXs.append( '<div class="form-element boxed map green" style="padding:0px"><div class="input-check"><div class="control-group"><label class="control control--checkbox" for="mapMarkersDevPlan"><input id="mapMarkersDevPlan" name="mapMarkersDevPlan" type="checkbox"><div class="control__indicator"></div>Bauleitplanung</label></div></div></div>');
                   $('#mapMarkersDevPlan').on('change', function() {
                        var checkbox = $(this);
                        if ($(this).is(':checked')) {
                            map.addLayer(mapMarkersDevPlan);
                        } else {
                            map.removeLayer(mapMarkersDevPlan);
                        }
                    });
                }
            }
        }
        if(map){
            map.on('layeradd', onOverlayAdd);
            var mapParamLayer = '$mapParamLayer';
            if(mapParamLayer) {
                mapParamLayer = mapParamLayer.split(',');
            }
            if($checkedCategoryDevPlan && mapParamLayer.length === 0 || mapParamLayer.indexOf('blp') > -1){
                if(mapMarkersDevPlan) {
                    map.addLayer(mapMarkersDevPlan);
                    $('#mapMarkersDevPlan').prop('checked', true);
                }
            }
            if($checkedCategory10 && mapParamLayer.length === 0 || mapParamLayer.indexOf('zv') > -1){
                if(mapMarkers10) {
                    map.addLayer(mapMarkers10);
                    $('#mapMarkers10').prop('checked', true);
                }
            }
            if($checkedCategory11 && mapParamLayer.length === 0 || mapParamLayer.indexOf('av') > -1){
                if(mapMarkers11) {
                    map.addLayer(mapMarkers11);
                    $('#mapMarkers11').prop('checked', true);
                }
            }
            if($checkedCategory1314 && mapParamLayer.length === 0 || mapParamLayer.indexOf('vv') > -1){
                if(mapMarkers1314) {
                    map.addLayer(mapMarkers1314);
                    $('#mapMarkers1314').prop('checked', true);
                }
            }
            if($checkedCategory12 && mapParamLayer.length === 0 || mapParamLayer.indexOf('nv') > -1){
                if(mapMarkers12) {
                    map.addLayer(mapMarkers12);
                    $('#mapMarkers12').prop('checked', true);
                }
            }
        }
    })
    .error(function () {
    });

    var mapPosition = '$mapPosition';
    var mapExtent = '$mapExtent';
    var mapLat;
    var mapLng;
    var mapZoom;
    var mapBounds;
    var mapParamExtent = '$mapParamExtent';
    if(mapParamExtent) {
        mapParamExtent = mapParamExtent.split(',');
    }
    if(mapPosition){
        mapLat = parseFloat('$mapPosition.get(0)');
        mapLng = parseFloat('$mapPosition.get(1)');
        mapZoom = parseFloat('$mapPosition.get(2)');
    }
    
    if('$mapParamN' && '$mapParamE' && '$mapParamZoom') {
        mapLat = parseFloat('$mapParamN') || mapLat;
        mapLng = parseFloat('$mapParamE') || mapLng;
        mapZoom = parseFloat('$mapParamZoom') || mapZoom;
    } else if(mapParamExtent && mapParamExtent.length === 4){
        mapBounds = L.latLngBounds(
          L.latLng(parseFloat(mapParamExtent[0]),
            parseFloat(mapParamExtent[1])),
          L.latLng(parseFloat(mapParamExtent[2]),
          parseFloat(mapParamExtent[3]))
        );
    } else if('$selectedMap.webmapclientCoords'.indexOf("y1") > -1){
        mapBounds = L.latLngBounds(
          L.latLng(parseFloat('$selectedMap.webmapclientCoords.y1'),
            parseFloat('$selectedMap.webmapclientCoords.x1')),
          L.latLng(parseFloat('$selectedMap.webmapclientCoords.y2'),
          parseFloat('$selectedMap.webmapclientCoords.x2'))
        );
    } else if('$mapExtent'){
        mapBounds = L.latLngBounds(
          L.latLng(parseFloat('$mapExtent.get(0)'),
            parseFloat('$mapExtent.get(1)')),
          L.latLng(parseFloat('$mapExtent.get(2)'),
          parseFloat('$mapExtent.get(3)'))
        );
    }
    
    if(mapBounds){
        map.fitBounds(mapBounds);
    } else if(mapLat && mapLng && mapZoom) {
        map.setView(new L.LatLng(mapLat, mapLng), mapZoom);
        mapBounds = map.getBounds();
    }
    
    function onOverlayAdd(e){
        if(e.layer.options.id === 'mapMarkersDevPlan') {
            if("$restUrlUVPDevPlan") {
                if(mapMarkersDevPlan.getLayers().length === 0){
                    map.spin(true);
                    jQuery.get("$restUrlUVPDevPlan")
                    .done(function(data, textStatus, jqxhr) {
                        map.spin(false);
                        if(markersDevPlan){
                            for (var i = 0; i < markersDevPlan.length; i++) {
                                var a = markersDevPlan[i];
                                var id = a.id;
                                var name = a.name;
                                var descr = a.descr;
                                var latlon = a.latlon;
                                var polygon = a.polygon;
                                var bpinfos = a.bpinfos;
                                var popUpHtml = '';
                                var iconColor = 'green';
                                var icon = getIcon(smallIcons, iconColor, enablePopUp); 
                                var marker = L.marker(new L.LatLng(latlon[0],latlon[1]), { title: name, icon: icon, interactive: !smallIcons });
                                marker.bbox = null;
                                if(enablePopUp){
                                    popUpHtml += '<h5>' + name + '</h5>';
                                    if(descr && descr .length > 0){
                                        popUpHtml += '<h6 class="no-margin">Mitgliedsgemeinden:</h6>';
                                        popUpHtml += '<p class="leaflet-hyphens">' + descr + '</p>';
                                    }
                                    
                                    if(bpinfos && bpinfos.length > 0){
                                        popUpHtml += '<h6 class="no-margin">Nutzen Sie die folgenden Links um zu den Bauleitplanungs-Seiten zu gelangen:</h6>';
                                        popUpHtml += '<div class="link-list">';
                                        for (var j = 0; j < bpinfos.length; j++) {
                                            var bpinfo = bpinfos[j];
                                            if(bpinfo.url){
                                                var url = bpinfo.url;
                                                if(url.indexOf("http") === -1){
                                                    url = "http://" + url;
                                                }
                                                if(bpinfo.tags){
                                                    var tags = [].concat(bpinfo.tags);
                                                    for (var k = 0; k < tags.length; k++) {
                                                        var tag = tags[k];
                                                        if(tag){
                                                            var title;
                                                            if(tag === "v"){
                                                                title = 'Wirksame/rechtskr&auml;ftige Bauleitpl&auml;ne';
                                                            }else if(tag === "p"){
                                                                title = 'Bauleitpl&auml;ne im Beteiligungsverfahren';
                                                            }else if(tag === "v_fnp"){
                                                                title = 'Wirksame/rechtskr&auml;ftige Fl&auml;chennutzungspl&auml;ne';
                                                            }else if(tag === "p_fnp"){
                                                                title = 'Fl&auml;chennutzungspl&auml;ne im Beteiligungsverfahren';
                                                            }else if(tag === "v_bp"){
                                                                title = 'Wirksame/rechtskr&auml;ftige Bebauungspl&auml;ne';
                                                            }else if(tag === "p_bp"){
                                                                title = 'Bebauungspl&auml;ne im Beteiligungsverfahren';
                                                            }
                                                            if(title){
                                                                popUpHtml += '<a class="icon" href="' + url + '" target="_blank"><span class="ic-ic-arrow"></span><span class="text">' + title + '</span></a>';
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        popUpHtml += '</div>';
                                    }
                                    marker.bindPopup(popUpHtml, popupMarkerOptions);
                                    marker.on('popupopen', showMarker);
                                    marker.on('popupclose', hideMarker);
                                }
                                mapMarkersDevPlan.addLayer(marker);
                            }
                        }
                    })
                    .error(function () {
                      map.spin(false);
                    });
                }
            }
        } else if(e.layer.options.id === 'mapMarkers10') {
            if(mapMarkers10.getLayers().length === 0) {
                if("$restUrlMarker") {
                    map.spin(true);
                    jQuery.get("$restUrlMarker")
                    .done(function(data, textStatus, jqxhr) {
                        map.spin(false);
                        if(markers){
                            for (var i = 0; i < markers.length; i++) {
                                var a = markers[i];
                                var title = a[2];
                                var categories = a[6];
                                var uuid = a[3];
                                var procedure = a[5];
                                var steps = a[7];
                                var popUpHtml = '';
                                var iconColor = 'blue';
                                var icon = getIcon(smallIcons, iconColor, enablePopUp);
                                var marker = L.marker(new L.LatLng(a[0], a[1]), { title: title, icon: icon, interactive: !smallIcons });
                                marker.uuid = uuid;
                                marker.bbox = null;
                                if(enablePopUp){
                                    popUpHtml = createPopUp(title, procedure, categories, steps, uuid);
                                    marker.bindPopup(popUpHtml, popupMarkerOptions);
                                    marker.on('popupopen', showMarker);
                                    marker.on('popupclose', hideMarker);
                                }
                                mapMarkers10.addLayer(marker);
                            }
                        }
                    })
                    .error(function () {
                      map.spin(false);
                    });
                }
            }
        } else if(e.layer.options.id === 'mapMarkers1314') {
            if(mapMarkers1314.getLayers().length === 0) {
                if("$restUrlMarker2") {
                    map.spin(true);
                    jQuery.get("$restUrlMarker2")
                    .done(function(data, textStatus, jqxhr) {
                        map.spin(false);
                        if(markers){
                            for (var i = 0; i < markers.length; i++) {
                                var a = markers[i];
                                var title = a[2];
                                var categories = a[6];
                                var uuid = a[3];
                                var procedure = a[5];
                                var steps = a[7];
                                var popUpHtml = '';
                                var iconColor = 'red';
                                var icon = getIcon(smallIcons, iconColor, enablePopUp);
                                var marker = L.marker(new L.LatLng(a[0], a[1]), { title: title, icon: icon, interactive: !smallIcons });
                                marker.uuid = uuid;
                                marker.bbox = null;
                                if(enablePopUp){
                                    popUpHtml = createPopUp(title, procedure, categories, steps, uuid);
                                    marker.bindPopup(popUpHtml, popupMarkerOptions);
                                    marker.on('popupopen', showMarker);
                                    marker.on('popupclose', hideMarker);
                                }
                                mapMarkers1314.addLayer(marker);
                            }
                        }
                    })
                    .error(function () {
                      map.spin(false);
                    });
                }
            }
        } else if(e.layer.options.id === 'mapMarkers11') {
            if(mapMarkers11.getLayers().length === 0) {
                if("$restUrlMarker3") {
                    map.spin(true);
                    jQuery.get("$restUrlMarker3")
                    .done(function(data, textStatus, jqxhr) {
                        map.spin(false);
                        if(markers){
                            for (var i = 0; i < markers.length; i++) {
                                var a = markers[i];
                                var title = a[2];
                                var categories = a[6];
                                var uuid = a[3];
                                var procedure = a[5];
                                var steps = a[7];
                                var popUpHtml = '';
                                var iconColor = 'black';
                                var icon = getIcon(smallIcons, iconColor, enablePopUp);
                                var marker = L.marker(new L.LatLng(a[0], a[1]), { title: title, icon: icon, interactive: !smallIcons });
                                marker.uuid = uuid;
                                marker.bbox = null;
                                if(enablePopUp){
                                    popUpHtml = createPopUp(title, procedure, categories, steps, uuid);
                                    marker.bindPopup(popUpHtml, popupMarkerOptions);
                                    marker.on('popupopen', showMarker);
                                    marker.on('popupclose', hideMarker);
                                }
                                mapMarkers11.addLayer(marker);
                            }
                        }
                    })
                    .error(function () {
                      map.spin(false);
                    });
                }
            }
        } else if(e.layer.options.id === 'mapMarkers12') {
            if(mapMarkers12.getLayers().length === 0) {
                if("$restUrlMarker4") {
                    map.spin(true);
                    jQuery.get("$restUrlMarker4")
                    .done(function(data, textStatus, jqxhr) {
                        map.spin(false);
                        if(markers){
                            for (var i = 0; i < markers.length; i++) {
                                var a = markers[i];
                                var title = a[2];
                                var categories = a[6];
                                var uuid = a[3];
                                var procedure = a[5];
                                var steps = a[7];
                                var popUpHtml = '';
                                var iconColor = 'orange';
                                var icon = getIcon(smallIcons, iconColor, enablePopUp);
                                var marker = L.marker(new L.LatLng(a[0], a[1]), { title: title, icon: icon, interactive: !smallIcons });
                                marker.uuid = uuid;
                                marker.bbox = null;
                                if(enablePopUp){
                                    popUpHtml = createPopUp(title, procedure, categories, steps, uuid);
                                    marker.bindPopup(popUpHtml, popupMarkerOptions);
                                    marker.on('popupopen', showMarker);
                                    marker.on('popupclose', hideMarker);
                                }
                                mapMarkers12.addLayer(marker);
                            }
                        }
                    })
                    .error(function () {
                      map.spin(false);
                    });
                }
            }
        }
    }

    function getIcon(smallIcons, iconColor, enablePopUp) {
        var icon; 
        if(smallIcons){
            icon = L.icon({
                iconUrl: '/decorations/layout/ingrid/images/pins/icon_pin_small_' + iconColor + '.png',
                iconSize: [6, 6], 
                iconAnchor: [3, 3]
            });
        } else {
             icon = L.AwesomeMarkers.icon({
                markerColor: iconColor,
                className: enablePopUp ? 'awesome-marker' : 'awesome-marker leaflet-interactive-disable',
                prefix: 'icon'
            });
        }
        return icon;
    }
    
    function createPopUp(title, procedure, categories, steps, id) {
        var popUpHtml = '';
        popUpHtml += '<a href="/trefferanzeige?docuuid=' + id + '" target="_blank"><h5>' + title + '</h5></a>';
        
        if(procedure && procedure.length > 0){
            //popUpHtml += '<div class="map_popup_proc">' + procedure + '</div>';
        }
        
        if(categories && categories.length > 0){
            var categoryList = [];
            for (category in categories){
                var value = categories[category].name;
                var id = categories[category].id;
                if(categoryList.indexOf(value) === -1){
                    popUpHtml += '<div class="helper icon">';
                    popUpHtml += '<span class="ic-ic-' + id + '"></span>';
                    popUpHtml += '<span>' + value + '</span>';
                    popUpHtml += '</div>';
                    categoryList.push(value);
                }
            }
        }
        if(steps && steps.length > 0){
            popUpHtml += '<h6 class="no-margin">Letzter Verfahrensschritt:</h6>';
            popUpHtml += '<p>' + steps[steps.length - 1] + '</p>';
        }
        return popUpHtml;
    }
</script>