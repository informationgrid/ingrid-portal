#macro (renderNode $node)
    #set ($action = $renderResponse.createActionURL())
    $action.setParameter('nodeId',$node.id)
    ## UDK Object/Address render params
    #set($nodeTitle = $MESSAGES.getString($node.getName()))
    #if($tool.hasContent(${node.udk_class}))
        #if($node.origDocId && !$node.origDocId.isEmpty())
            #set($nodeUrl = "$renderResponse.encodeURL('/portal/search-detail.psml')?plugid=${node.plugId}&docuuid=${node.origDocId}#if(${node.docId})&docid=${node.docId}#end")
        #else
            #if($node.udk_docId && !$node.udk_docId.isEmpty())
                #set($nodeUrl = "$renderResponse.encodeURL('/portal/search-detail.psml')?plugid=${node.plugId}#if(${node.docId})&docuuid=${node.udk_docId}#end")
            #else
                #set($nodeUrl = "$renderResponse.encodeURL('/portal/search-detail.psml')?plugid=${node.plugId}#if(${node.docId})&docid=${node.docId}#end")
            #end
        #end
    #else
        #set($nodeUrl = '')
    #end
    #if($node.isOpen())
        $action.setParameter('action','doCloseNode')
    #else
        $action.setParameter('action','doOpenNode')
    #end
    #set($nodeLevel = $node.level)
    #set($nodeId = $node.id)
    #set($linkId = "${nodeLevel}-${nodeId}")
    #if ($node.expandable)
        <ul class="accordion" data-accordion data-multi-expand="true" data-allow-all-closed="true" role="tablist" >
            <li class="accordion-item #if($node.isOpen())is-active#end">
        #if($nodeUrl != '')
            <div class="accordion-item-sub">
                <span class="icon">
                    <a id="$linkId" href="#$linkId" onclick="updateLeaf('$linkId', true, event)" #if($node.isOpen()) class="ic-ic-minus" #else class="ic-ic-plus"#end></a>
                    #if($node.udk_class != "1000")
                        <a href="$nodeUrl">
                            $nodeTitle
                         </a>
                    #else
                        <span>$nodeTitle</span>
                    #end
                </span>
            </div>
        #else
            <a class="accordion-title" id="$linkId" href="$action" onclick="updateLeaf('$linkId', true, event)" aria-controls="${node.id}-accordion" role="tab">
                $nodeTitle
            </a>
        #end
        ## render sub nodes
        <div class="accordion-content" data-tab-content role="tabpanel" aria-labelledby="$linkId" id="${node.id}-accordion">
            #foreach($childNode in $node.getChildren())
               #renderNode($childNode)
            #end
        </div>
            </li>
        </ul>
    #else
        #if($nodeUrl != '')
            <div class="accordion-item-sub">
                <a href="$nodeUrl" class="icon">
                    #if ($node.plugType == 'dsc_ecs')
                        #set($udkObjClassName = $Codelists.getCodeListValue('8000', $node.udk_class, $request.getLocale().getLanguage()))
                        #renderUDKIcon(${node.udk_class} $nodeTitle $udkObjClassName)
                    #else
                        #set($udkAddrClassName = $MESSAGES.getString("udk_adr_class_name_${node.udk_class}"))
                        #renderUDKAddressIcon(${node.udk_class} $nodeTitle $udkAddrClassName)
                    #end
                </a>
            </div>
        #end
    #end
#end

<script>
    window.onload = function () {
        var param = 'openNodes';
        var params = getQueryStringParameter(param);
        if (params) {
            var paramsSplit = params.split(',');
            paramsSplit.sort(function(a, b){
                if(a < b) { return -1; }
                if(a > b) { return 1; }
                return 0;
            });

            var filterParams = [];
            var paramIndex;

            for(var paramsSplitIndex in paramsSplit) {
                var nodeId = paramsSplit[paramsSplitIndex];
                var nodeLevel = nodeId.split('-')[0];
                if(!paramIndex || nodeLevel !== paramIndex) {
                    paramIndex = nodeLevel;
                    var filter = paramsSplit.filter(function(e){
                        return e.indexOf(paramIndex) === 0; 
                    })
                    filterParams.push(filter);
                }
            }
            for(var filterParamIndex in filterParams) {
                var filterParam = filterParams[filterParamIndex];
                for(var nodeIndex in filterParam) {
                    var nodeId = filterParam[nodeIndex];
                    updateLeafWaiting(nodeId, 0);
                }
            }
        } else {
        #if(${openNodes})
            var defaultOpenNodes = ${openNodes};
            if (defaultOpenNodes) {
                updateQueryStringParameter('openNodes', defaultOpenNodes.toString());
            }
        #end
        }
    }

    function updateLeafWaiting(nodeId, attempt){
        attempt = attempt + 1;
        jQuery.when( $('#' + nodeId).length > 0).then(function(exists){
            if(exists){
                updateLeaf(nodeId, false);
            } else {
                if(attempt < 20) {
                    setTimeout(function(){ 
                        updateLeafWaiting(nodeId , attempt); 
                    }, 1000);
                } else {
                    console.log(attempt + ' attempts for node:' + nodeId); 
                }
            }
        });
    }

    function getLeafIcon(udkClass, type, altTitle, title) {
        if(udkClass) {
            if(udkClass !== '1000') {
                if (type === 'dsc_ecs') {
                    if(udkClass === '0') {
                        return '<span class="ic-ic-zulassungsverfahren" title="' + altTitle + '"></span><span class="text">' + title + '</span>'
                    } else if(udkClass === '1') {
                        return '<span class="ic-ic-karte" title="' + altTitle + '"></span><span class="text">' + title + '</span>';
                    } else if(udkClass === '2') {
                        return '<span class="ic-ic-katalog" title="' + altTitle + '"></span><span class="text">' + title + '</span>';
                    } else if(udkClass === '3') {
                        return '<span class="ic-ic-dienste" title="' + altTitle + '"></span><span class="text">' + title + '</span>';
                    } else if(udkClass === '4') {
                        return '<span class="ic-ic-projekt" title="' + altTitle + '"></span><span class="text">' + title + '</span>';
                    } else if(udkClass === '5') {
                        return '<span class="ic-ic-metadaten" title="' + altTitle + '"></span><span class="text">' + title + '</span>';
                    } else if(udkClass === '6') {
                        return '<span class="ic-ic-chemie" title="' + altTitle + '"></span><span class="text">' + title + '</span>';
                    }
                } else {
                    if(udkClass === '0') {
                        return '<span class="ic-ic-intituition" title="' + altTitle + '"></span><span class="text">' + title + '</span>'
                    } else if(udkClass === '1') {
                        return '<span class="ic-ic-einheit" title="' + altTitle + '"></span><span class="text">' + title + '</span>';
                    } else if(udkClass === '2') {
                        return '<span class="ic-ic-people" title="' + altTitle + '"></span><span class="text">' + title + '</span>';
                    } else if(udkClass === '3') {
                        return '<span class="ic-ic-mailto" title="' + altTitle + '"></span><span class="text">' + title + '</span>';
                    }
                }
            }
        }
        return '';
    }

    function updateLeaf(id, updateParams, evt) {
        if(evt) {
            evt.preventDefault();
            evt.stopPropagation();
        }

        var element = $('#' + id);
        var url = '$updateLeaf';
        var hasLeafContent = false;
        var param = 'openNodes';
        var params = getQueryStringParameter(param);
        var paramsSplit = params ? params.split(',') : [];
        if (element) {
            var elementAccordion = element.parent('span').parent('.accordion-item-sub');
            var parent = elementAccordion.parent('.accordion-item');
            if (elementAccordion.length > 0) {
                // Render udk elements
                var leafContent = elementAccordion.parent().find('.accordion-content').first();
                if(updateParams) {
                    if (parent.hasClass('is-active')) {
                        parent.removeClass('is-active');
                        element.removeClass('ic-ic-minus');
                        element.addClass('ic-ic-plus');
                        if(leafContent.length !== 0) {
                            leafContent.css('display', '');
                        }
                        if(params) {
                            var index = paramsSplit.indexOf(id);
                            if (index !== -1) {
                              paramsSplit.splice(index, 1);
                            }
                            updateQueryStringParameter(param, paramsSplit.toString());
                        }
                    } else {
                        parent.addClass('is-active');
                        element.removeClass('ic-ic-plus');
                        element.addClass('ic-ic-minus');
                        
                        if(leafContent.length !== 0) {
                            leafContent.css('display', 'block');
                        }
                        if(!params) {
                            params = id;
                        } else {
                            var index = paramsSplit.indexOf(id);
                            if (index === -1) {
                                params = params + ',' + id;
                            }
                        }
                        updateQueryStringParameter(param, params);
                    }
                } else {
                    parent.addClass('is-active');
                    if(leafContent.length !== 0) {
                        leafContent.css('display', 'block');
                    }
                }
                if(leafContent.length !== 0 && leafContent.children().length > 0) {
                    hasLeafContent = true;
                } else {
                    if(leafContent) {
                        leafContent.append('<div class="accordion-item-sub">$MESSAGES.getString('searchCatHierarchy.tree.loading')</div>');
                    }
                }
            } else {
                // Render main accordion
                var parent = element.parent('.accordion-item');
                var leafContent = element.parent().find('.accordion-content').first();
                if(updateParams) {
                    if (parent.hasClass('is-active')) {
                        parent.removeClass('is-active');
                        if(leafContent.length !== 0) {
                            leafContent.css('display', '');
                        }
                        if(params) {
                            var index = paramsSplit.indexOf(id);
                            if (index !== -1) {
                              paramsSplit.splice(index, 1);
                            }
                            updateQueryStringParameter(param, paramsSplit.toString());
                        }
                    } else {
                        parent.addClass('is-active');
                        if(leafContent.length !== 0) {
                            leafContent.css('display', 'block');
                        }
                        if(!params) {
                            params = id;
                        } else {
                            var index = paramsSplit.indexOf(id);
                            if (index === -1) {
                                params = params + ',' + id;
                            }
                        }
                        updateQueryStringParameter(param, params);
                    }
                } else {
                    parent.addClass('is-active');
                    if(leafContent.length !== 0) {
                        leafContent.css('display', 'block');
                    }
                }
                if(leafContent.length !== 0 && leafContent.children().length > 0) {
                    hasLeafContent = true;
                } else {
                    if(leafContent) {
                        leafContent.append('<div class="accordion-item-sub">$MESSAGES.getString('searchCatHierarchy.tree.loading')</div>');
                    }
                }
            }
        }
        if (!hasLeafContent) {
            jQuery.ajax({
                url: url+ '?id=' + encodeURIComponent(id)
            }).done(function( data ) {
                const leafs = data;
                var leafsHtml = '';
                if (leafs.length > 0) {
                    for (var leafsIndex in leafs) {
                        var leaf = leafs[leafsIndex];
                        if(leaf){
                            var leafId = leaf.id;
                            var leafLevel = leaf.level;
                            var leafTitle = leaf.udk_class_value;
                            var leafName = leaf.name;
                            var leafPlugId = leaf.plugId;
                            var leafDocId = leaf.docId;
                            var leafUdkClass = leaf.udk_class;
                            var leafIcon = getLeafIcon(leaf.udk_class, leaf.plugType, leafTitle, leafName);

                            if (leaf.expandable) {
                                leafsHtml = leafsHtml + '<ul class="accordion" data-accordion data-multi-expand="true" data-allow-all-closed="true" role="tablist" >';
                                leafsHtml = leafsHtml + '<li class="accordion-item">';
                                leafsHtml = leafsHtml + '<div class="accordion-item-sub">';
                                leafsHtml = leafsHtml + '<span class="icon">';
                                leafsHtml = leafsHtml + '<a id="' + leafLevel + '-' + leafId + '" href="#' + leafLevel + '-' + leafId + '" onclick="updateLeaf(\'' + leafLevel + '-' + leafId + '\', true, event)" class="ic-ic-plus"></a>';
                                if(leafUdkClass !== '1000') {
                                    leafsHtml = leafsHtml + '<a href="/trefferanzeige?plugid=' + leafPlugId + '&amp;docuuid=' + leafDocId + '">';
                                    leafsHtml = leafsHtml + leafName + ' </a>';
                                } else {
                                    leafsHtml = leafsHtml + '<span>' + leafName + '</span>';
                                }
                                leafsHtml = leafsHtml + '</span>';
                                leafsHtml = leafsHtml + '</div>';
                                leafsHtml = leafsHtml + '<div class="accordion-content" data-tab-content role="tabpanel" aria-labelledby="' + leafLevel + '-' + leafId + '" id="' + id + '-accordion"></div>';
                                leafsHtml = leafsHtml + '</li>';
                                leafsHtml = leafsHtml + '</ul>';
                            } else {
                                leafsHtml = leafsHtml + '<div class="accordion-item-sub">';
                                if(leafUdkClass !== '1000') {
                                    leafsHtml = leafsHtml + '<a href="$renderResponse.encodeURL('/portal/search-detail.psml')?plugid=' + leafPlugId + '&amp;docuuid=' + leafDocId + '" class="icon">';
                                    leafsHtml = leafsHtml + leafIcon + ' </a>';
                                } else {
                                    leafsHtml = leafsHtml + '<span>' + leafName + '</span>';
                                }
                                leafsHtml = leafsHtml + '</div>';
                            }
                        }
                    }
                    if (leafsHtml.length > 0) {
                        leafContent.empty();
                        $(leafsHtml).appendTo(leafContent);
                    }
                } else {
                    leafContent.empty();
                }
            });
        }
    }
</script>

<div class="columns catalog">
    #foreach($plugNode in $ps.plugsRoot.getChildren())
        #renderNode($plugNode)
    #end
    #set ($action = $renderResponse.createActionURL())
    <form action="$action" method="post" name="extsearch" id="extsearch">
        #renderInputButtonClass("$MESSAGES.getString('searchCatHierarchy.submit.reload')" "width:100%" "submitReload" "$MESSAGES.getString('searchCatHierarchy.submit.reload.tooltip')" "btn btn--secondary btn--small")
    </form>
</div>
