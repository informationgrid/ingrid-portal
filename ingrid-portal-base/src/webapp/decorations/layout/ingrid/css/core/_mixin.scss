/*
 *  Core: Mixins
 *______________________*/




/*
    media()
    _______

    Add a given media query and css ruleset to
    a sensible data structure.

    Usage:
        .selector {
            attribute: value;

            @include media(
                $query: <condition>,
                $declarations: (
                    attribute: value,
                    attribute: value
                )
            );
        }

    @param <map> The media query condition
    @param <list> CSS
*/
$media-queries: ();

@mixin media($query, $css) {
    // Check if the media query already exists.
    @if index(map-keys($media-queries), breakpoint($query)) {
        // Get the current entry.
        $entry: map-get($media-queries, breakpoint($query));

        // Update the entry.
        $entry: map-merge($entry, (#{&}: $css));

        // Add the updated entry back into the query pool.
        $media-queries: map-merge($media-queries, (#{breakpoint($query)}:$entry)) !global;
    }
    @else {
        // Build an entry using the given query and css,
        // then add it to the query pool.
        $entry: (
            #{breakpoint($query)}: (
                #{&}: $css
            )
        );

        $media-queries: map-merge($media-queries, $entry) !global;
    }
};

@each $short, $long in $breakpoint {
    $entry: (
        #{$long}: ()
    );

    $media-queries: map-merge($media-queries, $entry) !global;
}



/*
    qualify()
    _________

    Qualify a selector to a specific tag.
    Only meant for use in unfortunate cases. :/

    Usage:
        .selector {
            color: blue;

            @include qualify(a) {
                color: yellow;
            }
        }

    CSS:
        .selector {
            color: blue;
        }

        a.selector {
            color: yellow;
        }

    @param <string> The tag you want to target
    @param <string> A tag specific ruleset
*/
@mixin qualify($tag) {
    @at-root {
        #{$tag + &} {
            @content;
        }
    }
}

@mixin placeholder {
  ::-webkit-input-placeholder {@content}
  :-moz-placeholder           {@content}
  ::-moz-placeholder          {@content}
  :-ms-input-placeholder      {@content}  
}
