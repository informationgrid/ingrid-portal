<!--
  **************************************************-
  Ingrid Portal Distribution
  ==================================================
  Copyright (C) 2014 wemove digital solutions GmbH
  ==================================================
  Licensed under the EUPL, Version 1.1 or â€“ as soon they will be
  approved by the European Commission - subsequent versions of the
  EUPL (the "Licence");
  
  You may not use this work except in compliance with the Licence.
  You may obtain a copy of the Licence at:
  
  http://ec.europa.eu/idabc/eupl5
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the Licence is distributed on an "AS IS" basis,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the Licence for the specific language governing permissions and
  limitations under the Licence.
  **************************************************#
  -->
<project name="InGrid Installation" basedir=".">
    <description>
        InGrid Installation Script
    </description>

    <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
    
    <import file="build_mysql.xml"  as="mysql" />
    <import file="build_oracle.xml" as="oracle" />
    <import file="build_postgres.xml" as="postgres" />
    <!--<import file="debug.xml"        as="debug" />-->

    <!-- =============================================
    	 = PROPERTIES								 =
    	 ============================================= -->
    <property name="tomcat-artifact"               value="apache-tomcat"/>
    <property name="installedTomcatContextDir"     value="${installDir}/${tomcat-artifact}/conf/Catalina/localhost"/>
    <property name="installedTomcatConfDir"        value="${installDir}/${tomcat-artifact}/conf"/>
    
    <property name="mysqlDbDriverInApache"         location="${basedir}/distribution/${tomcat-artifact}/shared/lib/mysql-connector-java-5.1.49.jar"/>
    <property name="oracleDbDriverInApache"        location="./distribution/${tomcat-artifact}/shared/lib/ojdbc8.jar"/>
    <property name="postgresDbDriverInApache"      location="./distribution/${tomcat-artifact}/shared/lib/postgresql-42.6.0.jar"/>
    
    <property name="prop-root"                     value="${installDir}/${tomcat-artifact}/webapps/ROOT/WEB-INF/classes/bootstrap.override.properties"/>

    <property name="prop-ingrid-portal-apps"       value="${installDir}/${tomcat-artifact}/webapps/ingrid-portal-apps/WEB-INF/classes/ingrid-portal-apps.override.properties"/>
    <property name="prop-quartz-portal-apps"       value="${installDir}/${tomcat-artifact}/webapps/ingrid-portal-apps/WEB-INF/classes/quartz.properties"/>
    <property name="xml-hibernate-portal-apps"     value="${installDir}/${tomcat-artifact}/webapps/ingrid-portal-apps/WEB-INF/classes/hibernate.cfg.xml"/>
    <property name="xml-hibernate-portal-mdek"     value="${installDir}/${tomcat-artifact}/webapps/ingrid-portal-mdek/WEB-INF/classes/hibernate.cfg.xml"/>
    
    <property name="mdek-app-class-path"           value="${installDir}/${tomcat-artifact}/webapps/ingrid-portal-mdek-application/WEB-INF/classes"/>
    <property name="prop-mdek-apps"                value="${mdek-app-class-path}/mdek.override.properties"/>
    <property name="prop-datasource-mdek-apps"     value="${mdek-app-class-path}/default-datasource.properties"/>
    <property name="i-prop-mdek-igeAdminUser"      value="${mdek-app-class-path}/igeAdminUser.properties"/>

    <property name="i-prop-ingrid-webmap-client"   value="${installDir}/${tomcat-artifact}/webapps/ingrid-webmap-client/WEB-INF/classes/application.override.properties"/>

    <!-- THESE PROPERTIES ARE NECESSARY FOR UPDATES -->
    <property name="libraryDir"         value="${tomcat-artifact}/webapps/ROOT/META-INF,apache-tomcat-6.0.35/webapps/ROOT/META-INF" />
    <property name="libraryIdent"       value="MANIFEST.MF" />
    <property name="versionsWithConfigurations"  value="" />
    <property name="minSupportedVersion" value="4.0.0" />

    <import file="build-installer-utils.xml"  as="utils" />
    <import file="build-patch.xml"            as="patch" />

    
    <!-- =============================================
         = CONFIGURATIONS                            =
         ============================================= -->
    <target name="configureProperties" if="installProcedure">
        <echo>Configure Properties
        </echo>
    	<property name="_adminUser"     value="${adminUser}" />
    	<property name="_adminPassword" value="${adminPassword}" />
    	<property name="_dbUrl"         value="${dbUrl}" />
    	<property name="_mdekDBUrl"     value="${mdekDBUrl}" />
        
        <!-- in Oracle each user has its own database (space) -->
        <if>
            <equals arg1="${useOracle}" arg2="true" />
            <then>
                <property name="_dbUser"        value="${adminUser}" />
                <property name="_dbPassword"    value="${adminPassword}" />
                <property name="_mdekUser" value="${mdekUser}" />
                <property name="_mdekPassword" value="${mdekPassword}" />
            </then>
            <else>
                <property name="_dbUser"        value="${dbUser}" />
                <property name="_dbPassword"    value="${dbPassword}" />
                <property name="_mdekUser" value="${dbUser}" />
                <property name="_mdekPassword" value="${dbPassword}" />
            </else>
        </if>
    </target>

    <target name="configurePropertiesFromFiles" if="updateProcedure">
        <echo>Configure Properties from previous Installation
        </echo>
        <xmlproperty  file="${installedTomcatContextDir}/ingrid-portal-apps.xml" prefix="cipaXML"/>
        <property name="_adminUser" value="${cipaXML.Context.Resource(username)}" />
        <property name="_adminPassword" value="${cipaXML.Context.Resource(password)}" />
        <property name="_dbUrl" value="${cipaXML.Context.Resource(url)}" />
        <!--<property name="_mySqlDbDriverClass" value="${cipaXML.Context.Resource(driverClassName)}" />
        <property name="_mySqlDbDriver" value="${mySqlDbDriver}" />-->
        
        <xmlproperty  file="${installedTomcatContextDir}/ingrid-portal-mdek.xml" prefix="cipmXML"/>
        <property name="_mdekDBUrl" value="${cipmXML.Context.Resource(url)}" />
        
        <if>
            <equals arg1="${cipaXML.Context.Resource(driverClassName)}" arg2="com.mysql.jdbc.Driver" />
            <then>
                <runtarget target="setMySqlProperty"/>
            </then>
        <elseif>
            <equals arg1="${cipaXML.Context.Resource(driverClassName)}" arg2="org.postgresql.Driver" />
            <then>
                <runtarget target="setPostgresProperty"/>
            </then>
        </elseif>
        <else>
            <runtarget target="setOracleProperty"/>
        </else>
        </if>
        
        <property name="_mdekUser" value="${cipmXML.Context.Resource(username)}" />
        <property name="_mdekPassword" value="${cipmXML.Context.Resource(password)}" />
        
        <!-- check what has been installed previously -->
        <available file="${installDir}/${tomcat-artifact}/webapps/ingrid-portal-mdek-application" type="dir" property="ige.installed"/>
        <available file="${installDir}/${tomcat-artifact}/webapps/ingrid-portal-apps" type="dir" property="portal.installed"/>
    </target>

    <target name="setUpdateProperty" depends="checkPreconditionsForUpdate, UnzipInstallerForUpdate">
        <property name="installType" value="update" />
        <property name="updateProcedure" value="true" />
    </target>
    
    <target name="setInstallProperty">
        <property name="installProcedure" value="true" />
    </target>
    
    <target name="setMySqlProperty">
    	<property name="useMysql" value="true" />
        <property name="usedDriver" value="${mySqlDriverClass}" />
        <property name="usedDialect" value="${mySqlDialect}" />
        <property name="usedDialectPortal" value="${mySqlDialectPortal}" />
        <property name="usedValidationQuery" value="${mySqlValidationQuery}" />
        <property name="usedQuartzDriverDelegate" value="${mySqlQuartzDriverDelegate}" />
        <!-- check current database status 
        <runtarget target="mysql.CheckDbs"/>-->
    </target>

    <target name="setOracleProperty">
    	<property name="useOracle" value="true" />
        <property name="usedDriver" value="${oracleDriverClass}" />
        <property name="usedDialect" value="${oracleDialect}" />
        <property name="usedDialectPortal" value="${oracleDialectPortal}" />
        <property name="usedValidationQuery" value="${oracleValidationQuery}" />
        <property name="usedQuartzDriverDelegate" value="${oracleQuartzDriverDelegate}" />
        <!-- check current database status
        <runtarget target="oracle.CheckDbs"/>-->
    </target>

    <target name="setPostgresProperty">
    	<property name="usePostgres" value="true" />
        <property name="usedDriver" value="${postgresDriverClass}" />
        <property name="usedDialect" value="${postgresDialect}" />
        <property name="usedDialectPortal" value="${postgresDialectPortal}" />
        <property name="usedValidationQuery" value="${postgresValidationQuery}" />
        <property name="usedQuartzDriverDelegate" value="${postgresQuartzDriverDelegate}" />
        <!-- check current database status 
        <runtarget target="postgres.CheckDbs"/>-->
    </target>

    <target name="UnzipInstaller">
    	 <unzip src="${antinstaller.jar}" dest="${basedir}">
            <patternset>
                <include name="distribution/**/*.*"/>
            </patternset>
        </unzip>

        <copy file="${mysqlDbDriverInApache}"  todir="${basedir}"/>
        <copy file="${oracleDbDriverInApache}" todir="."/>
        <copy file="${postgresDbDriverInApache}" todir="."/>
    </target>
    
    <target name="UnzipInstallerForUpdate">
        <unzip src="${antinstaller.jar}" dest=".">
            <patternset>
                <include name="**/*.*"/>
                <exclude name="distribution/${tomcat-artifact}/conf/tomcat-users.xml" />
                <exclude name="distribution/${tomcat-artifact}/conf/Catalina/localhost/*.xml" />
            </patternset>
        </unzip>

        <copy file="${mysqlDbDriverInApache}"  todir="."/>
        <copy file="${oracleDbDriverInApache}" todir="."/>
        <copy file="${postgresDbDriverInApache}" todir="."/>
    </target>


    <!-- =============================================
         = MAIN TARGETS                              =
         ============================================= -->
    <target name="InstallPortal" depends="UnzipInstaller" unless="copyOracleDump">
        <!-- complete or without IGE -->
        <if>
            <equals arg1="${configMdek}" arg2="true" />
            <then>
                <property name="installType" value="portalComplete" />
                <property name="ige.installed" value="true" />
            </then>
        <else>
            <property name="installType" value="portalOnly" />
            <property name="withoutIge" value="true" />
        </else>
        </if>
        <property name="portal.installed" value="true" />
    </target>

    <target name="InstallOnlyIge" depends="UnzipInstaller">
        <property name="installType" value="onlyIge" />
        <property name="ige.installed" value="true" />
        <property name="only.ige.installation" value="true" />
    </target>
	
    <target name="copyOracleDump">
        <copy toDir="${installDir}">
            <fileset dir="${basedir}/distribution/sql">
                <include name="ingrid_portal_35_oracle_10_2.dmp"/>
                <include name="ingrid_portal_35_oracle_10_2.log"/>
                <include name="_README.txt"/>
            </fileset>
        </copy>
	</target>

    <target name="StartInstallation" depends="configureProperties,configurePropertiesFromFiles">
        <runtarget target="MoveFiles" />
        
        <if>
            <equals arg1="${useOracle}" arg2="true" />
            <then>
                <runtarget target="oracle.CheckDbs" />
            </then>
        <elseif>
            <equals arg1="${usePostgres}" arg2="true" />
            <then>
                <runtarget target="postgres.CheckDbs" />
            </then>
        </elseif>
        <elseif>
            <equals arg1="${useMysql}" arg2="true" />
            <then>
                <runtarget target="mysql.CheckDbs" />
            </then>
        </elseif>
        <else>
            <echo>Probleme bei der Ermittlung der Datenbank.</echo>
        </else>
        </if>
        
        <if>
            <equals arg1="${installType}" arg2="portalComplete" />
            <then>
                <echo message="Complete" />
                <runtarget target="ExtractPortal"/>
                <runtarget target="ExtractIge"/>
                <runtarget target="configurePortal"/>
                <runtarget target="configureIge"/>
                <!-- make sure that the metadata menu is visible -->
                <echo>Schreibe Konfiguration zur Anzeige des MetadatenmenÃ¼s</echo>
                <touch file="${prop-root}"/>
                <propertyfile file="${prop-root}">
                    <entry key="portal.showMetadataMenu" value="true" />
                </propertyfile>
            </then>
            <elseif>
                <equals arg1="${installType}" arg2="portalOnly" />
                <then>
                    <echo message="Portal Only" />
                    <runtarget target="ExtractPortal"/>
                    <runtarget target="configurePortal"/>
                    <runtarget target="configurePortalOnly"/>
                 </then>
            </elseif>
            <elseif>
                <equals arg1="${installType}" arg2="onlyIge" />
                <then>
                    <echo message="Ige Only" />
                    <runtarget target="ExtractIge"/>
                    <runtarget target="configureIge"/>
                    <runtarget target="configureIgeOnly"/>
                 </then>
            </elseif>
            <elseif>
                <equals arg1="${installType}" arg2="update" />
                <then>
                    <echo message="Update" />

                    <runtarget target="ExtractPortalForUpdate" />
                    <runtarget target="ExtractIgeForUpdate" />
                    <runtarget target="RemoveIgeForUpdate" />
                 </then>
            </elseif>
        </if>
    </target>
    
    <!-- =============================================
         = WORKER                                    =
         ============================================= -->
    <target name="ExtractPortal">
    	<move file="${installDir}/${tomcat-artifact}/webapps/ingrid-portal-base.war" tofile="${installDir}/${tomcat-artifact}/webapps/ROOT.war"/>
        <unwar src="${installDir}/${tomcat-artifact}/webapps/ROOT.war"                   dest="${installDir}/${tomcat-artifact}/webapps/ROOT"/>
        <unwar src="${installDir}/${tomcat-artifact}/webapps/ingrid-webmap-client.war"  dest="${installDir}/${tomcat-artifact}/webapps/ingrid-webmap-client"/>
        <move toDir="${installDir}/${tomcat-artifact}/webapps">
            <fileset dir="${installDir}/${tomcat-artifact}/webapps/ROOT/WEB-INF/deploy">
                <include name="**/ingrid-portal-apps.war"/>
                <include name="**/ingrid-portal-mdek.war"/>
            </fileset>
        </move>
        <unwar src="${installDir}/${tomcat-artifact}/webapps/ingrid-portal-apps.war" dest="${installDir}/${tomcat-artifact}/webapps/ingrid-portal-apps"/>
        <unwar src="${installDir}/${tomcat-artifact}/webapps/ingrid-portal-mdek.war" dest="${installDir}/${tomcat-artifact}/webapps/ingrid-portal-mdek"/>
        
        <if>
            <equals arg1="${executeTomcatSSLUpdate}" arg2="true" />
            <then>
                <runtarget target="writeTomcatSSLProps"/>
            </then>
        </if>
        <runtarget target="writeMapClientProps"/>
    </target>

    <target name="ExtractPortalForUpdate" if="portal.installed">
        <!-- rename ingrid-portal to ROOT, so it'll be accessible from tomcat root -->
        <move file="${installDir}/${tomcat-artifact}/webapps/ingrid-portal-base.war" tofile="${installDir}/${tomcat-artifact}/webapps/ROOT.war"/>

        <!-- since the file shibboleth.xml was added with version 3.3.1 we need to preserve configuration changes -->
        <move file="${installDir}/${tomcat-artifact}/webapps/ROOT/WEB-INF/assembly/alternate/shibboleth.xml" tofile="${installDir}/${tomcat-artifact}/webapps/ROOT/WEB-INF/assembly/alternate/shibboleth.xml.bak" failonerror="false"/>
        <unwar src="${installDir}/${tomcat-artifact}/webapps/ROOT.war" dest="${installDir}/${tomcat-artifact}/webapps/ROOT"/>
        <move file="${installDir}/${tomcat-artifact}/webapps/ROOT/WEB-INF/assembly/alternate/shibboleth.xml.bak" tofile="${installDir}/${tomcat-artifact}/webapps/ROOT/WEB-INF/assembly/alternate/shibboleth.xml" failonerror="false"/>

        <unwar src="${installDir}/${tomcat-artifact}/webapps/ingrid-webmap-client.war"  dest="${installDir}/${tomcat-artifact}/webapps/ingrid-webmap-client"></unwar>
        <move toDir="${installDir}/${tomcat-artifact}/webapps">
            <fileset dir="${installDir}/${tomcat-artifact}/webapps/ROOT/WEB-INF/deploy">
                <include name="**/ingrid-portal-apps.war"/>
                <include name="**/ingrid-portal-mdek.war"/>
            </fileset>
        </move>
        <unwar src="${installDir}/${tomcat-artifact}/webapps/ingrid-portal-apps.war" dest="${installDir}/${tomcat-artifact}/webapps/ingrid-portal-apps">
            <patternset>
                <exclude name="WEB-INF/classes/communication.xml" />
                <exclude name="WEB-INF/classes/hibernate.cfg.xml" />
                <exclude name="WEB-INF/classes/quartz.properties" />
            </patternset>
        </unwar>
        <unwar src="${installDir}/${tomcat-artifact}/webapps/ingrid-portal-mdek.war" dest="${installDir}/${tomcat-artifact}/webapps/ingrid-portal-mdek">
            <patternset>
                <exclude name="WEB-INF/classes/hibernate.cfg.xml" />
            </patternset>
        </unwar>
        <if>
            <equals arg1="${executeTomcatSSLUpdate}" arg2="true" />
            <then>
                <runtarget target="writeTomcatSSLProps"/>
            </then>
        </if>
        <if>
            <equals arg1="${executeMapClientUpdate}" arg2="true" />
            <then>
                <runtarget target="writeMapClientProps"/>
            </then>
        </if>
    </target>

    <target name="writeTomcatSSLProps" description="">
        <echo>Bearbeitung von Tomcat Konfigurationen fÃ¼r SSL.</echo>
        <replace      file="${installedTomcatConfDir}/server.xml" token='redirectPort="8443" />' value='redirectPort="8443" proxyPort="443" scheme="https" secure="true" />'/>
    </target>

    <target name="ExtractIge">
    	<unwar src="${installDir}/${tomcat-artifact}/webapps/ingrid-portal-mdek-application.war"  dest="${installDir}/${tomcat-artifact}/webapps/ingrid-portal-mdek-application"/>
    </target>

    <target name="ExtractIgeForUpdate" if="ige.installed">
        <unwar src="${installDir}/${tomcat-artifact}/webapps/ingrid-portal-mdek-application.war"  dest="${installDir}/${tomcat-artifact}/webapps/ingrid-portal-mdek-application">
            <patternset>
                <exclude name="WEB-INF/classes/communication.xml" />
                <exclude name="WEB-INF/classes/default-datasource.properties" />
                <exclude name="WEB-INF/classes/mdek.override.properties" />
                <exclude name="WEB-INF/classes/igeAdminUser.properties" />
                <exclude name="dojo-sources/ingrid/hierarchy/behaviours.user.j*" />
            </patternset>
        </unwar>

        <chmod dir="${installDir}/${tomcat-artifact}/bin" perm="755" includes="**/*.sh"/>
        <chmod dir="${installDir}/${tomcat-artifact}/webapps/ingrid-portal-mdek-application/WEB-INF" perm="600" includes="configurations.xml"/>

        <mkdir dir="${installDir}/${tomcat-artifact}/logs"/>
    </target>

    <target name="RemoveIgeForUpdate" unless="ige.installed">
        <delete file="${installDir}/${tomcat-artifact}/webapps/ingrid-portal-mdek-application.war" />
    </target>
    
    <target name="RemoveOldLibs" if="updateProcedure">
        <!-- remove copy of codelist repository to make sure we use the latest initial codelist! -->
        <delete dir="${installDir}/${tomcat-artifact}/data"/>
        <delete dir="${installDir}/${tomcat-artifact}/lib"/>
        <delete dir="${installDir}/${tomcat-artifact}/shared/lib"/>
        <delete dir="${installDir}/${tomcat-artifact}/webapps/ROOT/WEB-INF/lib"/>
        <delete dir="${installDir}/${tomcat-artifact}/webapps/ingrid-portal-apps/WEB-INF/lib"/>
        <delete dir="${installDir}/${tomcat-artifact}/webapps/ingrid-portal-mdek/WEB-INF/lib"/>
        <delete dir="${installDir}/${tomcat-artifact}/webapps/ingrid-portal-mdek-application/WEB-INF/lib"/>
        <!-- also profiles directory to have plain profiles from update! -->
        <echo>Alte Portal Profile lÃ¶schen</echo>
        <delete dir="${installDir}/${tomcat-artifact}/webapps/ingrid-portal-apps/profiles"/>
        <!-- Delete old WebmapClient data folders -->
        <if>
            <equals arg1="${executeMapClientUpdate}" arg2="true" />
            <then>
                <runtarget target="cleanMapClientProps"/>
            </then>
        </if>
        <!-- Delete old WebmapClient installation ! -->
        <runtarget target="cleanMapClientInstallation"/>
        <!-- remove tomcat working dir to force compilation of JSPs -->
        <delete dir="${installDir}/${tomcat-artifact}/work"/>
    </target>
    
    <target name="MoveFiles" depends="RemoveOldLibs">
        <move toDir="${installDir}/${tomcat-artifact}">
            <fileset dir="${basedir}/distribution/${tomcat-artifact}"/>
        </move>
        <copy toDir="${installDir}/sql">
            <fileset dir="${basedir}/distribution/sql"/>
        </copy>
        
        <chmod dir="${installDir}/${tomcat-artifact}/bin" perm="755" includes="**/*.sh"/>
        <mkdir dir="${installDir}/${tomcat-artifact}/logs"/>
    </target>

    <target name="configurePortal">
    	<echo>Schreibe iBus Konfiguration in config.override.properties (Ingrid-Portal-Apps)
        </echo>
        <touch file="${prop-ingrid-portal-apps}"/>
        <propertyfile file="${prop-ingrid-portal-apps}">
            <entry key="communication.clientName" value="${clientName}" />
            <entry key="communications.ibus" value="${serverName},${serverIp},${serverPort}" />
        </propertyfile>

        <echo>Schreibe iBus Admin-URL und CSW-Schnittstelle-URL in ingrid-portal-apps.override.xml (Ingrid-Portal-Apps)
        </echo>
        <touch file="${prop-ingrid-portal-apps}"/>
        <propertyfile file="${prop-ingrid-portal-apps}">
            <entry key="ibus.admin.url" value="http://${serverIp}/ibus-gui/" />
            <entry key="csw.interface.url" value="${cswUrl}" />
            <entry key="email.smtp.server" value="${mdekMailSmtp}" />
        </propertyfile>
        
        <!-- Writing username and password into xml files -->
        <xmlproperty  file="${installedTomcatContextDir}/ROOT.xml" prefix="cipXML"/>
        <replace      file="${installedTomcatContextDir}/ROOT.xml" token='username="${cipXML.Context.Resource(username)}"' value='username="${_dbUser}"'/>
        <replace      file="${installedTomcatContextDir}/ROOT.xml" token='password="${cipXML.Context.Resource(password)}"' value='password="${_dbPassword}"'/>
        <replace      file="${installedTomcatContextDir}/ROOT.xml" token='url="${cipXML.Context.Resource(url)}"' value='url="${_dbUrl}"'/>
        <replace      file="${installedTomcatContextDir}/ROOT.xml" token='driverClassName="${cipXML.Context.Resource(driverClassName)}"'                 value='driverClassName="${usedDriver}"'/>
        <replace      file="${installedTomcatContextDir}/ROOT.xml" token='validationQuery="${cipXML.Context.Resource(validationQuery)}"'                 value='validationQuery="${usedValidationQuery}"'/>

        <xmlproperty  file="${installedTomcatContextDir}/ingrid-portal-apps.xml" prefix="cipaXML"/>
        <replace      file="${installedTomcatContextDir}/ingrid-portal-apps.xml" token='username="${cipaXML.Context.Resource(username)}"' value='username="${_dbUser}"'/>
        <replace      file="${installedTomcatContextDir}/ingrid-portal-apps.xml" token='password="${cipaXML.Context.Resource(password)}"' value='password="${_dbPassword}"'/>
        <replace      file="${installedTomcatContextDir}/ingrid-portal-apps.xml" token='url="${cipaXML.Context.Resource(url)}"' value='url="${_dbUrl}"'/>
        <replace      file="${installedTomcatContextDir}/ingrid-portal-apps.xml" token='driverClassName="${cipaXML.Context.Resource(driverClassName)}"'                 value='driverClassName="${usedDriver}"'/>
        <replace      file="${installedTomcatContextDir}/ingrid-portal-apps.xml" token='validationQuery="${cipXML.Context.Resource(validationQuery)}"'                 value='validationQuery="${usedValidationQuery}"'/>

        <replaceregexp file="${xml-hibernate-portal-apps}" match='"dialect">org.hibernate.*&lt;/property>' replace='"dialect">${usedDialectPortal}&lt;/property>' byline="true"/>
        <replaceregexp file="${prop-quartz-portal-apps}" match='driverDelegateClass = org.quartz.impl.jdbcjobstore.*' replace='driverDelegateClass = ${usedQuartzDriverDelegate}' byline="true"/>
    </target>

    <target name="configurePortalOnly">
        <echo>Schreibe Konfiguration zur Anzeige des MetadatenmenÃ¼s</echo>
        <touch file="${prop-root}"/>
        <propertyfile file="${prop-root}">
            <entry key="portal.showMetadataMenu" value="false" />
        </propertyfile>
        
        <delete file="${installDir}/${tomcat-artifact}/webapps/ingrid-portal-mdek-application.war" />
    </target>

    <target name="configureIge">
    	<echo>Schreibe Ingrid-Editor Konfiguration
        </echo>
        <touch file="${prop-mdek-apps}"/>
        <propertyfile file="${prop-mdek-apps}">
            <entry key="communication.server.name" value="/ingrid-group:ige-ibus" />
            <entry key="communication.server.port" value="${mdekServerPort}" />
        </propertyfile>

        <property file="${prop-datasource-mdek-apps}" prefix="madataPROP"/>
        <replace  file="${prop-datasource-mdek-apps}" token='driverClass=${madataPROP.hibernate.driverClass}' value='driverClass=${usedDriver}' />
        <replace  file="${prop-datasource-mdek-apps}" token='dialect=${madataPROP.hibernate.dialect}' value='dialect=${usedDialect}' />
        <replace  file="${prop-datasource-mdek-apps}" token='jdbcUrl=${madataPROP.hibernate.jdbcUrl}' value='jdbcUrl=${_mdekDBUrl}'/>
        <replace  file="${prop-datasource-mdek-apps}" token='user=${madataPROP.hibernate.user}' value='user=${_mdekUser}'/>
        <replace  file="${prop-datasource-mdek-apps}" token='password=${madataPROP.hibernate.password}' value='password=${_mdekPassword}'/>

        <propertyfile file="${prop-mdek-apps}">
            <entry key="workflow.mail.smtp" value="${mdekMailSmtp}" />
            <entry key="workflow.mail.sender" value="${mdekMailSender}" />
            <entry key="mdek.directLink" value="http://${mdekDirectLink}/ingrid-portal-mdek-application/index.jsp" />
        </propertyfile>

        <xmlproperty  file="${installedTomcatContextDir}/ingrid-portal-mdek.xml" prefix="cipmXML"/>
        <replace      file="${installedTomcatContextDir}/ingrid-portal-mdek.xml" token='username="${cipmXML.Context.Resource(username)}"' value='username="${_mdekUser}"'/>
        <replace      file="${installedTomcatContextDir}/ingrid-portal-mdek.xml" token='password="${cipmXML.Context.Resource(password)}"' value='password="${_mdekPassword}"'/>
        <replace      file="${installedTomcatContextDir}/ingrid-portal-mdek.xml" token='url="${cipmXML.Context.Resource(url)}"' value='url="${_mdekDBUrl}"'/>
        <replace      file="${installedTomcatContextDir}/ingrid-portal-mdek.xml" token='driverClassName="${cipaXML.Context.Resource(driverClassName)}"'                 value='driverClassName="${usedDriver}"'/>
        <replace      file="${installedTomcatContextDir}/ingrid-portal-mdek.xml" token='validationQuery="${cipXML.Context.Resource(validationQuery)}"'                 value='validationQuery="${usedValidationQuery}"'/>

        <replaceregexp file="${xml-hibernate-portal-mdek}" match='"dialect">org.hibernate.*&lt;/property>' replace='"dialect">${usedDialectPortal}&lt;/property>' byline="true"/>

        <runtarget target="writeCodelistConfig"/>
    </target>
    
    <target name="writeCodelistConfig" if="ige.installed">
        <echo>Schreiben der Codelist-Repository Informationen in configurations.xml
        </echo>
        <touch file="${prop-mdek-apps}"/>
        <propertyfile file="${prop-mdek-apps}">
            <entry key="codelist.requestUrl" value="${clUrl}" />
            <entry key="codelist.username" value="${clUsername}" />
            <entry key="codelist.password" value="${clPassword}" />
        </propertyfile>
    </target>

    <target name="configureIgeOnly">
    	<echo>Konfiguriere Standalone-IGE und setze Administrator-Passwort fuer IGE Verwaltung
        </echo>
        <touch file="${prop-mdek-apps}"/>
        <propertyfile file="${prop-mdek-apps}">
            <entry key="installation.standalone" value="true" />
        </propertyfile>
        <touch file="${i-prop-mdek-igeAdminUser}"/>
        <propertyfile file="${i-prop-mdek-igeAdminUser}">
            <entry key="admin.password" value="${igeAdminPassword}" />
        </propertyfile>

        <delete file="${installDir}/${tomcat-artifact}/webapps/ingrid-portal.war" />
        <delete file="${installDir}/${tomcat-artifact}/webapps/ingrid-webmap-client.war" />
        <delete file="${installDir}/${tomcat-artifact}/webapps/ingrid-portal-apps.war" />
        <delete file="${installDir}/${tomcat-artifact}/webapps/ingrid-portal-mdek.war" />
    </target>
    
    <target name="copyMigrationTools35ManualMigration">
        <echo>=========================================================
            Die Portal-Datenbank muss manuell zu 3.5 migriert werden!
            Siehe im Installationsverzeichnis unter "migration_35"
            =========================================================
        </echo>
        <runtarget target="copyMigrationTools35"/>
        <property name="migrateManual" value="true" />
    </target>

    <target name="copyMigrationTools35">
        <copy toDir="${installDir}">
            <fileset dir="${basedir}/distribution/sql">
                <include name="ingrid_portal_35_oracle_10_2.dmp"/>
                <include name="ingrid_portal_35_oracle_10_2.log"/>
                <include name="**/migration_35/*"/>
            </fileset>
        </copy>
        <copy file="${basedir}/distribution/sql/_README.txt" todir="${installDir}"/>
        <copy file="${installDir}/${tomcat-artifact}/shared/lib/mysql-connector-java-5.1.49.jar"  todir="${installDir}/migration_35"/>
        <copy file="${installDir}/${tomcat-artifact}/shared/lib/ojdbc*.jar*" todir="${installDir}/migration_35"/>
    </target>

    <!-- =============================================
         = MAPCLIENT                                 =
         ============================================= -->

    <target name="writeMapClientProps" description="">
        <echo>Schreibe Webmap-Client Konfiguration</echo>
        <touch file="${i-prop-ingrid-webmap-client}"/>
        <!-- write the application.properties file-->
        <propertyfile file="${i-prop-ingrid-webmap-client}">
            <entry key="config.dir"  value="${WebmapDataDir}/WebmapClientData/"/>
            <entry key="kml.directory"  value="${WebmapDataDir}/WebmapClientData/kml"/>
            <entry key="feedback.host" value="${feedbackHost}" />
            <entry key="feedback.port" value="${feedbackPort}" />
            <entry key="feedback.user" value="${feedbackUser}" />
            <entry key="feedback.password" value="${feedbackPassword}" />
            <entry key="feedback.from" value="${feedbackEmail}" />
            <entry key="feedback.to" value="${feedbackEmail}" />
        </propertyfile>
        <!-- Delete old WebmapClient data folders -->
        <runtarget target="cleanMapClientProps"/>
        <!-- Add new WebmapClient data folders -->
        <runtarget target="createMapClientProps"/>
    </target>

    <target name="createMapClientProps" description="">
        <if>
            <available file="${WebmapDataDir}/WebmapClientData"/>
            <then>
                <echo>WebmapClient Daten-Verzeichnis beibehalten.</echo>
            </then>
            <else>
                <echo>WebmapClient Daten-Verzeichnis neu erstellen.</echo>
                <mkdir dir="${WebmapDataDir}/WebmapClientData"/>
            </else>
        </if>
        <if>
            <available file="${WebmapDataDir}/WebmapClientData/data"/>
            <then>
                <echo>WebmapClient 'data' Verzeichnis beibehalten.</echo>
            </then>
            <else>
                <echo>WebmapClient 'data' Verzeichnis neu erstellen.</echo>
                <mkdir dir="${WebmapDataDir}/WebmapClientData/data"/>
                <copy todir="${WebmapDataDir}/WebmapClientData/data" >
                    <fileset dir="${installDir}/${tomcat-artifact}/webapps/ingrid-webmap-client/frontend/data">
                        <include name="**/*.json"/>
                    </fileset>
                </copy>
            </else>
        </if>
        <if>
            <available file="${WebmapDataDir}/WebmapClientData/config"/>
            <then>
                <echo>WebmapClient 'config' Verzeichnis beibehalten.</echo>
            </then>
            <else>
                <echo>WebmapClient 'config' Verzeichnis neu erstellen.</echo>
                <mkdir dir="${WebmapDataDir}/WebmapClientData/config"/>
            </else>
        </if>
        <if>
            <available file="${WebmapDataDir}/WebmapClientData/kml"/>
            <then>
                <echo>WebmapClient 'kml' Verzeichnis beibehalten.</echo>
            </then>
            <else>
                <echo>WebmapClient 'kml' Verzeichnis neu erstellen.</echo>
                <mkdir dir="${WebmapDataDir}/WebmapClientData/kml"/>
            </else>
        </if>
        <if>
            <available file="${WebmapDataDir}/WebmapClientData/help"/>
            <then>
                <echo>WebmapClient 'help' Verzeichnis beibehalten.</echo>
            </then>
            <else>
                <echo>WebmapClient 'help' Verzeichnis neu erstellen.</echo>
                <mkdir dir="${WebmapDataDir}/WebmapClientData/help"/>
            </else>
        </if>
        <if>
            <available file="${WebmapDataDir}/WebmapClientData/css"/>
            <then>
                <echo>WebmapClient 'css' Verzeichnis beibehalten.</echo>
            </then>
            <else>
                <echo>WebmapClient 'css' Verzeichnis neu erstellen.</echo>
                <mkdir dir="${WebmapDataDir}/WebmapClientData/css"/>
            </else>
        </if>
        <if>
            <available file="${WebmapDataDir}/WebmapClientData/locales"/>
            <then>
                <echo>WebmapClient 'locales' Verzeichnis beibehalten.</echo>
            </then>
            <else>
                <echo>WebmapClient 'locales' Verzeichnis neu erstellen.</echo>
                <mkdir dir="${WebmapDataDir}/WebmapClientData/locales"/>
            </else>
        </if>
    </target>

    <target name="cleanMapClientProps" description="">
        <if>
            <available file="${WebmapDataDir}/WebmapClientData/ingrid_webmap_client_config.xml"/>
            <then>
                <echo>Alte WebmapClient-Konfiguration lÃ¶schen</echo>
                <delete dir="${WebmapDataDir}/WebmapClientData"/>
            </then>
        </if>
    </target>

    <target name="cleanMapClientInstallation" description="">
        <if>
            <equals arg1="${executeMapClientUpdate}" arg2="true" />
            <then>
                <if>
                    <available file="${installDir}/${tomcat-artifact}/webapps/ingrid-webmap-client/frontend/config"/>
                    <then>
                        <echo>Kopieren von vorhandenen WebmapClient-Konfigurationen.</echo>
                        <runtarget target="createMapClientProps"/>
                    </then>
                </if>
            </then>
        </if>
        <echo>Alte WebmapClient-Installation lÃ¶schen</echo>
        <delete dir="${installDir}/${tomcat-artifact}/webapps/ingrid-webmap-client/frontend"/>
        <delete dir="${installDir}/${tomcat-artifact}/webapps/ingrid-webmap-client/admin"/>
        <delete dir="${installDir}/${tomcat-artifact}/webapps/ingrid-webmap-client/WEB-INF/classes/de"/>
        <delete dir="${installDir}/${tomcat-artifact}/webapps/ingrid-webmap-client/WEB-INF/lib"/>
    </target>

    <target name="cleanuptarget">
        <delete file="${mysqlDbDriverInApache}"/>
        <delete file="${oracleDbDriverInApache}"/>
        <delete file="${postgresDbDriverInApache}"/>
        
        <echo>
        =================
        Weiteres Vorgehen
        =================

        </echo>
        <if>
            <equals arg1="${dbChoice}" arg2="copyOracleDump" />
            <then>
                <echo>
                    Gehen Sie ins Verzeichnis:
                    ${installDir}
                    und importieren Sie den vorliegenden Oracle-Dump in Ihre
                    Datenbank.
    
                    Bitte lesen Sie bzgl. weiteren Vorgehen die Kapitel unter
                    "http://informationgrid.github.io"
                </echo>
            </then>
            <elseif>
                <equals arg1="${migrateManual}" arg2="true" />
                <then>
                    <echo>
                        Bevor Sie das Portal nutzen kÃ¶nnen, muss die Datenbank manuell migriert werden.
                        Gehen Sie in das Verzeichnis: ${installDir}/migration_35
                        FÃ¼r MySQL starten Sie das Skript mit:
                        sh migrate.sh
                        Es wird eine Verbindung zum Internet benÃ¶tigt!
                        Weitere Infos finden sich in der README Datei.

                        Bei weiteren Fragen sehen sie hier fÃ¼r weitere Informationen:
                        "http://informationgrid.github.io"
                    </echo>
                </then>
            </elseif>
            <else>
                <echo>
                    Gehen Sie ins Verzeichnis:
                    ${installDir}/${tomcat-artifact}
                    und rufen sie von der Kommandozeile folgendes auf
                    "bin/startup.sh", um den TomCat/Portal zu starten.
    
                    Bitte lesen Sie bzgl. weiteren Vorgehen die Kapitel unter
                    "http://informationgrid.github.io"
                </echo>
            </else>
        </if>
        
    </target>

</project>
